{
  "openapi": "3.0.3",
  "info": {
    "title": "EcologicalNiche.paw",
    "description": "",
    "version": "1.0.0",
    "contact": {
      "name": "milko",
      "email": "skofic@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://echo.paw.cloud/",
      "description": ""
    }
  ],
  "paths": {
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/species/list/": {
      "get": {
        "summary": "List all species",
        "description": "This service will return the sorted list of all available species as an array.",
        "operationId": "23ade7a8-cba2-49ab-af42-e931d41f2d6a",
        "parameters": [],
        "requestBody": {
          "description": "This service will return the sorted list of all available species as an array.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "example": 404
                    },
                    "errorNum": {
                      "type": "integer",
                      "format": "int64",
                      "example": 404
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "unknown path '/scat/species/list'"
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "91"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/stat/": {
      "get": {
        "summary": "Occurrence grid cells statistics",
        "description": "This service will return the count of all map grid cells that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe result will be a single integer value.",
        "operationId": "ad1f90f3-6def-4510-b781-238fab12569b",
        "parameters": [],
        "requestBody": {
          "description": "This service will return the count of all map grid cells that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe result will be a single integer value.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": 146633
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/array/": {
      "get": {
        "summary": "Occurrence grid cells as array",
        "description": "This service will return all map grid cell coordinates that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe service expects two required URL parameters:\n\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be an array of two elements: longitude and latitude.",
        "operationId": "c69d3379-927d-4b0f-8f64-b43cac8fcd58",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1000",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return all map grid cell coordinates that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe service expects two required URL parameters:\n\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be an array of two elements: longitude and latitude.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "3372970"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/point/": {
      "get": {
        "summary": "Occurrence grid cells as GeoJSON points",
        "description": "This service will return all map grid cell points that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe service expects two required URL parameters:\n\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be a GeoJSON point object.",
        "operationId": "c8ce90d8-8644-4253-9ba2-1d3edd3455b4",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1000",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return all map grid cell points that have species occurrence probabilities, regardless of period and future model scenario.\n\nThe service expects two required URL parameters:\n\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be a GeoJSON point object.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "geometry": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Point"
                          },
                          "coordinates": {
                            "type": "number",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "67088"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/species/stat/": {
      "get": {
        "summary": "Species occurrence stats by period and scenario",
        "description": "This service will return the count of all map grid cells for a specific species, period and future scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n\nIf the period is `cur2005`, the scenario will be ignored.\n\nThe result will be a single integer value.",
        "operationId": "7ca78729-2614-41f2-b6ca-12f6d9138763",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fut2035",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return the count of all map grid cells for a specific species, period and future scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n\nIf the period is `cur2005`, the scenario will be ignored.\n\nThe result will be a single integer value.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "value": 57230
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/species/array/": {
      "get": {
        "summary": "Species occurrence data by period and scenario as array",
        "description": "Given a species, a period and a model scenario, this service will return all the available grid cell coordinates, for the target species, the time period and the eventual future model scenario, as an array of three floating point values: longitude, latitude and occurrence probability in the range from 0 to 100.\n\nThe service expects the following parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be an array of three elements: longitude, latitude and occurrence probability in the range from 0 to 100.\n",
        "operationId": "82e6d807-1e59-47ff-8706-c6db48b7b7a8",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1000",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fut2035",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "Given a species, a period and a model scenario, this service will return all the available grid cell coordinates, for the target species, the time period and the eventual future model scenario, as an array of three floating point values: longitude, latitude and occurrence probability in the range from 0 to 100.\n\nThe service expects the following parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record will be an array of three elements: longitude, latitude and occurrence probability in the range from 0 to 100.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "25414"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/map/species/point/": {
      "get": {
        "summary": "Species occurrence data by period and scenario as GeoJSON points",
        "description": "Given a species, a period and a model scenario, this service will return all the available grid points, for the target species, the time period and the eventual future model scenario, as a GeoJSON point object with the property 'value' in the range from 0 to 100.\n\nThe service expects the following parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record is a GeoJSON point object with its 'value' property corresponding to the species occurrence probability as a float value ranging from 0 to 100.\n",
        "operationId": "01262888-7b9f-4be0-b20d-7e1f148eca89",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1000",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fut2035",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "Given a species, a period and a model scenario, this service will return all the available grid points, for the target species, the time period and the eventual future model scenario, as a GeoJSON point object with the property 'value' in the range from 0 to 100.\n\nThe service expects the following parameters:\n\n- `species`: Genus and species.\n- `period`: The time period:\n   - `cur2005`: Centered on 2005, current period.\n   - `fut2035`: Future modeled period centered on 2035.\n   - `fut2065`: Future modeled period centered on 2065.\n   - `fut2095`: Future modeled period centered on 2095.\n- `scenario`: Model scenario, only for future periods:\n   - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n   - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `start`: First record index, zero-based.\n- `limit`: Number of records to return.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nEach record is a GeoJSON point object with its 'value' property corresponding to the species occurrence probability as a float value ranging from 0 to 100.\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "Feature"
                      },
                      "geometry": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Point"
                          },
                          "coordinates": {
                            "type": "number",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "integer",
                            "format": "int64",
                            "example": 15
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "109414"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/stat/": {
      "get": {
        "summary": "Indicators pair statistics for period and scenario",
        "description": "This service will return statistics related to the requested indicators pair, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `@Y`: Statistics for the Y-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations: *min* minimum, *avg* average and *max* maximum.",
        "operationId": "2ac2c57d-4b18-4b78-9b4d-e6a600383ccd",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return statistics related to the requested indicators pair, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `@Y`: Statistics for the Y-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations: *min* minimum, *avg* average and *max* maximum.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 98616
                    },
                    "bio01": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "number"
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "number"
                        }
                      }
                    },
                    "bio12": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 0
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2907
                        }
                      }
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 182
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "177"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/array/": {
      "get": {
        "summary": "Indicators pair values for period and scenario as array",
        "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.",
        "operationId": "2596006e-e5f0-4eba-bfb8-ce12b975256f",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "1273"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/object/": {
      "get": {
        "summary": "Indicators pair values for period and scenario as object",
        "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.",
        "operationId": "cf4b05b0-27e5-4f72-a847-b508f4900ae2",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bio01": {
                        "type": "number"
                      },
                      "bio12": {
                        "type": "integer",
                        "format": "int64",
                        "example": 591
                      },
                      "items": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "3673"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/species/stat/": {
      "get": {
        "summary": "Indicators pair statistics for species, period and scenario",
        "description": "This service will return statistics related to the requested indicators pair, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `@Y`: Statistics for the Y-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations: *min* minimum, *avg* average and *max* maximum.",
        "operationId": "56359730-7af0-4f6d-9e98-c7de1cef6fae",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return statistics related to the requested indicators pair, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `@Y`: Statistics for the Y-axis indicator value: *min* minimum, *avg* average and *max* maximum.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations: *min* minimum, *avg* average and *max* maximum.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 36473
                    },
                    "bio01": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "number"
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "number"
                        }
                      }
                    },
                    "bio12": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 444
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1806
                        }
                      }
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 35
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "177"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/species/array/": {
      "get": {
        "summary": "Indicators pair values for species, period and scenario as array",
        "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.",
        "operationId": "d9642c23-63c3-4fe9-837f-4c7ac1953df0",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "1301"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/species/object/": {
      "get": {
        "summary": "Indicators pair values for species, period and scenario as object",
        "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.",
        "operationId": "9efa812b-38f9-4907-87e4-c97c1ca8ea88",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "species",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Abies alba",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `species`: Genus and species of interest.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bio01": {
                        "type": "number"
                      },
                      "bio12": {
                        "type": "integer",
                        "format": "int64",
                        "example": 530
                      },
                      "items": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "3701"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/unit/stat/": {
      "get": {
        "summary": "Indicators pair statistics for unit, period and scenario",
        "description": "This service will return statistics related to the requested unit, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator:\n    - `min`: Minimum X-axis indicator value.\n    - `avg`: Average X-axis indicator value.\n    - `max`: Maximum X-axis indicator value.\n- `@Y`: Statistics for the Y-axis indicator:\n    - `min`: Minimum Y-axis indicator value.\n    - `avg`: Average Y-axis indicator value.\n    - `max`: Maximum Y-axis indicator value.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations:\n    - `min`: Minimum number of grid items.\n    - `avg`: Average number of grid items.\n    - `max`: Maximum number of grid items.\n- `properties`: Unit geometry topographic statistics:\n    - `chr_AvElevation`: Average elevation in meters.\n    - `chr_MinElevation`: Minimum elevation in meters.\n    - `chr_MaxElevation`: Maximum elevation in meters.\n    - `chr_StdElevation`: Elevation standard deviation.\n    - `chr_AvSlope`: Average slope angle.\n    - `chr_AvAspect`: Average aspect in degrees.\n    - `geo_shape_area`: Unit geometry area in square meters.\n\nIf the `unit` was not found, the service will return a `404` status.\n\n",
        "operationId": "946f18ea-43d6-4a23-9b50-09ed3fbec403",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "unit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DEU00001",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return statistics related to the requested unit, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return the following object:\n\n- `count`: Total number of unique X and Y combinations.\n- `@X`: Statistics for the X-axis indicator:\n    - `min`: Minimum X-axis indicator value.\n    - `avg`: Average X-axis indicator value.\n    - `max`: Maximum X-axis indicator value.\n- `@Y`: Statistics for the Y-axis indicator:\n    - `min`: Minimum Y-axis indicator value.\n    - `avg`: Average Y-axis indicator value.\n    - `max`: Maximum Y-axis indicator value.\n- `items`: Statistics for the number of grid items matching the indicators pair value combinations:\n    - `min`: Minimum number of grid items.\n    - `avg`: Average number of grid items.\n    - `max`: Maximum number of grid items.\n- `properties`: Unit geometry topographic statistics:\n    - `chr_AvElevation`: Average elevation in meters.\n    - `chr_MinElevation`: Minimum elevation in meters.\n    - `chr_MaxElevation`: Maximum elevation in meters.\n    - `chr_StdElevation`: Elevation standard deviation.\n    - `chr_AvSlope`: Average slope angle.\n    - `chr_AvAspect`: Average aspect in degrees.\n    - `geo_shape_area`: Unit geometry area in square meters.\n\nIf the `unit` was not found, the service will return a `404` status.\n\n",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2
                    },
                    "bio01": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 9
                        },
                        "avg": {
                          "type": "number"
                        },
                        "max": {
                          "type": "number"
                        }
                      }
                    },
                    "bio12": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 818
                        },
                        "avg": {
                          "type": "integer",
                          "format": "int64",
                          "example": 839
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 860
                        }
                      }
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "avg": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "max": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "chr_AvElevation": {
                          "type": "number"
                        },
                        "chr_MinElevation": {
                          "type": "integer",
                          "format": "int64",
                          "example": 273
                        },
                        "chr_MaxElevation": {
                          "type": "integer",
                          "format": "int64",
                          "example": 309
                        },
                        "chr_StdElevation": {
                          "type": "number"
                        },
                        "chr_AvSlope": {
                          "type": "number"
                        },
                        "chr_AvAspect": {
                          "type": "number"
                        },
                        "geo_shape_area": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "359"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/unit/array/": {
      "get": {
        "summary": "Indicators pair values for unit, period and scenario as array",
        "description": "This service will return indicators pair values related to the requested unit, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.\n\nIf the `unit` was not found, the service will return a `404` status.",
        "operationId": "4c81329a-d7f8-4b37-9bb8-0a6b28591026",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          },
          {
            "name": "unit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DEU00001",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested unit, period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of arrays:\n\n- *[0]*: X-axis indicator value.\n- *[1]*: Y-axis indicator value..\n- *[2]*: Number of matching grid items.\n\nIf the `unit` was not found, the service will return a `404` status.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "25"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/{protocol}:/{host}:{port}/_db/{db}/{path}/pair/unit/object/": {
      "get": {
        "summary": "Indicators pair values for unit, period and scenario as object",
        "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.\n\nIf the `unit` was not found, the service will return a `404` status.",
        "operationId": "83911d4f-35fc-40ee-b67c-5d902f5fa22d",
        "parameters": [
          {
            "name": "X",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio01",
              "description": ""
            }
          },
          {
            "name": "Y",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bio12",
              "description": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "100",
              "description": ""
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1991-2020",
              "description": ""
            }
          },
          {
            "name": "scenario",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "rcp45",
              "description": ""
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0",
              "description": ""
            }
          },
          {
            "name": "unit",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DEU00001",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "This service will return indicators pair values related to the requested period and scenario.\n\nThe service expects the following URL parameters:\n\n- `unit`: Conservation unit number.\n- `period`: The time period:\n    - `1960-1990`: Current period, centered on 1960 to 1990.\n    - `1991-2020`: Future period, centered on 1991 to 2020.\n    - `2021-2050`: Future period, centered on 2021 to 2050.\n    - `2051-2080`: Future period, centered on 2051 to 2080.\n- `scenario`: Model scenario, only for future periods:\n    - `rcp45`: Representative Concentration Pathway 4.5 (RCP 4.5).\n    - `rcp85`: Representative Concentration Pathway 8.5 (RCP 8.5).\n- `X`: X-axis indicator:\n    - `bio01`: Mean annual air temperature.\n    - `bio12`: Annual precipitation amount.\n    - `bio15`: Precipitation seasonality.\n    - `ci`: Continentality.\n    - `ps`: Summer precipitation.\n    - `pw`: Winter precipitation.\n    - `ts`: Summer temperature.\n- `Y`: Y-axis indicator, the allowed value are the same as the *X-axis* indicator.\n- `start`: First record page index, zero is the first page.\n- `limit`: Number of records per page.\n\nIf both `start` and `limit` are zero, all records will be returned.\n\nIf the period is `1960-1990`, the scenario will be ignored. The value of the *X-axis* must be different than the value of the *Y-axis*.\n\nThe service will return an array of objects:\n\n- `@X`: X-axis indicator value.\n- `@Y`: Y-axis indicator value..\n- `items`: Number of matching grid items.\n\nIf the `unit` was not found, the service will return a `404` status.",
          "content": {
            "text/plain": {}
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bio01": {
                          "type": "number"
                        },
                        "bio12": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Pragma": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "X-Content-Type-Options": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "Content-Security-Policy": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "frame-ancestors 'self'; form-action 'self';"
                }
              },
              "Strict-Transport-Security": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000 ; includeSubDomains"
                }
              },
              "Server": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "ArangoDB"
                }
              },
              "Content-Type": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Cache-Control": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "no-cache, no-store, must-revalidate, pre-check=0, post-check=0, max-age=0, s-maxage=0"
                }
              },
              "Expires": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0"
                }
              },
              "Content-Length": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "73"
                }
              },
              "X-Arango-Queue-Time-Seconds": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "0.000000"
                }
              },
              "Connection": {
                "description": "",
                "schema": {
                  "type": "string",
                  "example": "Close"
                }
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {}
}